package main

import (
	"bufio"
	"log"
	"os"
	"strings"
	"time"

	"github.com/gorilla/websocket"
)

func main() {
	// ctx, cancel := context.WithTimeout(context.Background(), time.Hour)
	// defer cancel()

	conn, _, err := websocket.DefaultDialer.Dial("ws://localhost:8080/api/ws/room1/user2", nil)
	if err != nil {
		panic(err)
	}
	log.Println("connected to server")
	defer conn.Close()

	go func() {
		reader := bufio.NewReader(os.Stdin)
		conn.SetWriteDeadline(time.Now().Add(10 * time.Second))

		for {
			line, _ := reader.ReadString('\n')
			line = strings.Replace(line, "\n", "", -1)
			// err = wsjson.Write(ctx, conn, line)
			err = conn.WriteJSON(line)
			if err != nil {
				panic(err)
			}
		}
	}()

	msgs := make(chan interface{})

	go func() {
		var msg interface{}
		for {
			// err = wsjson.Read(ctx, conn, &msg)
			err = conn.ReadJSON(&msg)
			if err != nil {
				log.Printf("error reading from websocket, %v", err)
				break
			} else {
				msgs <- msg
			}
		}
	}()

	for {
		msg := <-msgs
		log.Printf("message from serverï¼š%v\n", msg)
	}
}
